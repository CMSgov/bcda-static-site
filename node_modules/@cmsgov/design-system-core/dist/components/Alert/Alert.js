"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Alert = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _lodash = _interopRequireDefault(require("lodash.uniqueid"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Alert = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(Alert, _React$PureComponent);

  function Alert(props) {
    var _this;

    _classCallCheck(this, Alert);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Alert).call(this, props));
    _this.headingId = _this.props.headingId || (0, _lodash.default)('alert_');

    if (process.env.NODE_ENV !== 'production') {
      if (!props.heading && !props.children) {
        console.warn("Empty <Alert> components are not allowed, please use the 'heading' prop or include children.");
      }
    }

    return _this;
  }

  _createClass(Alert, [{
    key: "heading",
    value: function heading() {
      var Heading = "h".concat(this.props.headingLevel) || "h3";

      if (this.props.heading) {
        return _react.default.createElement(Heading, {
          className: "ds-c-alert__heading",
          id: this.headingId
        }, this.props.heading);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var classes = (0, _classnames.default)('ds-c-alert', this.props.hideIcon && 'ds-c-alert--hide-icon', this.props.variation && "ds-c-alert--".concat(this.props.variation), this.props.className);
      return _react.default.createElement("div", {
        className: classes,
        role: this.props.role,
        "aria-labelledby": this.props.heading ? this.headingId : undefined
      }, _react.default.createElement("div", {
        className: "ds-c-alert__body"
      }, this.heading(), this.props.children));
    }
  }]);

  return Alert;
}(_react.default.PureComponent);

exports.Alert = Alert;
Alert.defaultProps = {
  role: 'region',
  headingLevel: '3'
};
Alert.propTypes = {
  /**
   * The alert's body content
   */
  children: _propTypes.default.node,

  /**
   * Text for the alert heading
   */
  heading: _propTypes.default.string,

  /**
   * Optional id used to link the `aria-labelledby` attribute to the heading. If not provided, a unique id will be automatically generated and used.
   */
  headingId: _propTypes.default.string,

  /**
   * Heading type to override default `<h3>`.
   */
  headingLevel: _propTypes.default.oneOf(['1', '2', '3', '4', '5']),

  /**
   * Boolean to hide the `Alert` icon
   */
  hideIcon: _propTypes.default.bool,

  /**
   * ARIA `role`, defaults to 'region'
   */
  role: _propTypes.default.oneOf(['alert', 'alertdialog', 'region']),

  /**
   * A string corresponding to the `Alert` variation classes (`error`, `warn`, `success`)
   */
  variation: _propTypes.default.oneOf(['error', 'warn', 'success'])
};
var _default = Alert;
exports.default = _default;