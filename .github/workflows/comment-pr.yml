name: comment pr

on:
  workflow_call:

jobs:
  comment-pr:
    runs-on: self-hosted

    steps:
      - name: Post or update comment
        uses: actions/github-script@v7
        with:
          script: |
            const commentIdentifier = '## Deploy Preview';
            const commitSha = context.payload.pull_request.head.sha;
            const commitUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${commitSha}`;
            const previewUrl = `https://https://d27n86ormmec02.cloudfront.net/${context.issue.number}/`

            const body = `${commentIdentifier}

            **Preview URL:** [${previewUrl}](${previewUrl})

            **Latest commit:** [${commitSha.substring(0, 7)}](\`${commitUrl}\`)`;

            async function findComment(issueNumber) {
              if (!issueNumber) return null;
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
              });
              return comments.data.find((comment) =>
                comment.body.startsWith(commentIdentifier)
              );
            }

            async function createOrUpdateComment(issueNumber) {
              if (!issueNumber) {
                console.log('No issue number provided. Cannot post or update comment.');
                return;
              }

              const existingComment = await findComment(issueNumber);
              if (existingComment) {
                await github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                });
              }

              await github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body,
              });
            }

            if (context.eventName === 'pull_request') {
              if (context.issue.number) {
                await createOrUpdateComment(context.issue.number);
              }
            } else if (context.eventName === 'push') {
              const pullRequests = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                head: `${context.repo.owner}:${context.ref.replace('refs/heads/','')}`,
              });

              if (pullRequests.data.length > 0) {
                await createOrUpdateComment(pullRequests.data[0].number);
              } else {
                console.log(
                  'No open pull request found for this push.'
                );
              }
            }
