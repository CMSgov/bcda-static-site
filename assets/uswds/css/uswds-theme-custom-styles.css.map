{"version":3,"sources":["uswds-theme-custom-styles.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/typography/typeset.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/utilities/_margin.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-typography.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/utilities/_font.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/utilities/_line-height.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/typography/headings.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/general/focus-outline.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/typography/usa-list.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/helpers/at-media.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/utilities/_padding.scss"],"names":[],"mappings":"AA4BE,OC2BA,eAAA,CACA,cAAA,CDxBA,gDEKE,eAAA,CACA,YAAA,CDCF,UAAA,CDLE,iBAAA,CAQM,y2BACE,cGqYiB,CHpYjB,eAAA,CAQR,4DACE,gBG0XqB,CHtXzB,wCIhBA,wEAAA,CACA,iBAAA,CCzBA,eAAA,CAAA,eAAA,CLyCA,gCIhBA,iBEpBA,CNqCA,wBIjBA,iBEfA,CNiCA,gBIlBA,gBEVA,CN6BA,QInBA,gBENA,CN0BA,QIrBA,gFAAA,CACA,gBAAA,CCzBA,eAAA,CCwBA,eAAA,CACA,qBAAA,CACA,wBAAA,CNqBA,OCUA,aAAA,CACA,yBAAA,CAEA,eACE,aAAA,CAGF,aACE,aAAA,CAGF,cACE,aAAA,CAGF,aM3EA,4BAAA,CACA,gBAAA,CPmDA,0CE7BE,iBAAA,CACA,cAAA,CMhCF,eAAA,CACA,gBAAA,CAEA,sIACE,eAAA,CAGF,gGAEE,gBAAA,CRsDA,gDQjDF,mBAAA,CACA,cAAA,CRsDF,cACE,iBAAA,CAIF,qBACE,2DAAA,CS7DE,gCT4DJ,qBAGI,yDAAA,CAAA,CS/DA,gCTqEF,YACE,qCAAA,CAEF,6BACE,mCAAA,CAEF,aAEE,8DAAA,CAAA,CAOF,oIACE,UAAA,CAIF,mCACE,iBAAA,CAGE,2GAEE,UAAA,CACA,iBAAA,CACA,KAAA,CACA,uBAAA,CACA,QAAA,CACA,SAAA,CACA,wBAAA,CAEF,sDACE,UAAA,CACA,sBAAA,CAOR,eACE,4BAAA,CSjHE,gCTsHJ,iBAEI,YAAA,CAAA,CSxHA,gCTsHJ,iBAMI,aAAA,CAAA,CAMJ,WEtII,QAAA,CF0IF,eE1IE,QAAA,CQQA,mBAAA,CVwIA,aAAA,CAMF,sDAAA,aAAA,CAAA,4BAAA,CAAA,gBAAA,CAAA,iBAAA,CAEA,+DAAA,UAAA,CAAA,wBAAA,CAAA,gBAAA,CAAA,iBAAA,CAEA,gBAAA,wBAAA,CACA,cAAA,aAAA,CACA,gBAAA,aAAA,CACA,cAAA,aAAA,CACA,cAAA,aAAA,CACA,cAAA,aAAA,CACA,cAAA,aAAA,CACA,cAAA,aAAA,CACA,2FAAA,aAAA,CAMA,eAAA,aAAA,CACA,eAAA,iBAAA,CACA,eAAA,aAAA,CACA,eAAA,eAAA,CACA,eAAA,aAAA,CACA,2EAAA,aAAA,CAKA,4CAAA,aAAA,CAGA,cAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,8BAAA,aAAA,CAEA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,8BAAA,aAAA,CAEA,8BAAA,aAAA,CAEA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,6BAAA,aAAA,CAEA,2EAAA,aAAA,CAKA,sJAAA,aAAA,CAUA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,eAAA,aAAA,CACA,6CAAA,aAAA,CAGA,8BAAA,aAAA,CAIF,mCU1NI,oBAAA,CV+NJ,2DACE,wBAAA,CAIC,qBAAA,CACA,oBAAA,CAGH,KACE,wBAAA,CS/ME,mCTmNF,MACE,UAAA,CAAA,CAIJ,EACE,yBAAA","file":"uswds-theme-custom-styles.css","sourcesContent":["/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nUSWDS THEME CUSTOM STYLES\n----------------------------------------\n!! Copy this file to your project's\n   sass root. Don't edit the version\n   in node_modules.\n----------------------------------------\nCustom project SASS goes here.\n\ni.e.\n@include u-padding-right('05');\n----------------------------------------\n*/\n\n@use \"uswds-core\" as *;\n\n// USWDS doesn't apply styles to some elements unless they're direct children\n// of .usa-prose (this sets defaults that utility classes can override).\nmain {\n\n  p {\n    @include typeset-p-base;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @include typeset-heading-base;\n    text-wrap: balance;\n  }\n\n  $elements: h1, h2, h3, h4, h5, h6, p, ul, ol;\n  @each $element in $elements {\n    #{$element} {\n      & + {\n        @each $element in $elements {\n          #{$element} {\n            margin-top: $theme-paragraph-margin-top;\n            margin-bottom: 0;\n          }\n        }\n      }\n    }\n  }\n\n  * + {\n    h1, h2, h3, h4, h5, h6 {\n      margin-top: $theme-heading-margin-top;\n    }\n  }\n\n  h1 { @include h1; }\n  h2 { @include h2; }\n  h3 { @include h3; }\n  h4 { @include h4; }\n  h5 { @include h5; }\n  h6 { @include h6; }\n\n  a { @include typeset-link; }\n\n  ul:not([class]),\n  ol:not([class]) {\n    @include usa-list;\n    li { @include usa-list-item; }\n  }\n\n}\n\n// Prevent orphaned words in short blocks of text\n.text-balance {\n  text-wrap: balance;\n}\n\n// Landing page hero background\n.bg-primary-gradient {\n  background: linear-gradient(135deg,color('primary') 33%,color('accent-cool-dark') 100%);\n  @include at-media($theme-site-margins-breakpoint) {\n    background: linear-gradient(90deg,color('primary') 33%,color('accent-cool') 99%);\n  }\n}\n\n// Landing page hero text\n@include at-media(\"desktop-lg\") {\n  .hero-title {\n    font-size: clamp( 3rem, 3.625vw, 4.25rem);\n  }\n  .hero-paragraph {\n    font-size: clamp( 1rem, 1.25vw, 1.5rem);\n  }\n  .hero-button {\n    font-size: clamp( 1rem, 1.25vw, 1.5rem);\n    padding: clamp( .75rem, 1vw, 1.25rem) clamp( 1.25rem, 1.5vw, 1.75rem);\n  }\n}\n\n.usa-section--dark {\n  // Headings default to \"accent-cool\" and are not theme-able\n  // https://github.com/uswds/uswds/blob/develop/packages/usa-section/src/styles/_usa-section.scss#L22-L31\n  h1, h2, h3, h4, h5, h6 {\n    color: color($theme-text-reverse-color);\n  }\n\n  // For dark sections within a .grid-container, fake them being full-width\n  .grid-container & {\n    position: relative;\n\n    &.bg-primary {\n      &::before,\n      &::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: calc(-50vw + 50%);\n        bottom: 0;\n        left: 100%;\n        background-color: color('primary');\n      }\n      &::before {\n        right: 100%;\n        left: calc(-50vw + 50%);\n      }\n    }\n  }\n}\n\n// Card images default to having a background color\n.usa-card__img {\n  background-color: transparent;\n}\n\n// In-page Nav shows on tablet and larger by default, but we want it to show\n// on desktop and larger\n.usa-in-page-nav {\n  @include at-media(\"tablet\") {\n    display: none;\n  }\n\n  @include at-media(\"desktop-lg\") {\n    display: block;\n  }\n}\n\n\n// Syntax highlighting (Pygments)\n.highlight {\n  @include u-margin(0);\n  // @include u-padding(2);\n\n  pre {\n    @include u-margin(0);\n    @include u-padding-top(3);\n    @include u-padding-bottom(3);\n    @include u-padding-left(2);\n    @include u-padding-right(2);\n    overflow: auto;\n  }\n\n  // From PyData Sphinx\n  // \"…designed to meet WCAG AA or AAA standards for color contrast…\"\n  // via https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/styling.html\n  td.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\n  span.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\n  td.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n  span.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n  .hll { background-color: #fae4c2 }\n  .c { color: #515151 } /* Comment */\n  .err { color: #a12236 } /* Error */\n  .k { color: #6730c5 } /* Keyword */\n  .l { color: #7f4707 } /* Literal */\n  .n { color: #080808 } /* Name */\n  .o { color: #00622f } /* Operator */\n  .p { color: #080808 } /* Punctuation */\n  .ch { color: #515151 } /* Comment.Hashbang */\n  .cm { color: #515151 } /* Comment.Multiline */\n  .cp { color: #515151 } /* Comment.Preproc */\n  .cpf { color: #515151 } /* Comment.PreprocFile */\n  .c1 { color: #515151 } /* Comment.Single */\n  .cs { color: #515151 } /* Comment.Special */\n  .gd { color: #005b82 } /* Generic.Deleted */\n  .ge { font-style: italic } /* Generic.Emph */\n  .gh { color: #005b82 } /* Generic.Heading */\n  .gs { font-weight: bold } /* Generic.Strong */\n  .gu { color: #005b82 } /* Generic.Subheading */\n  .kc { color: #6730c5 } /* Keyword.Constant */\n  .kd { color: #6730c5 } /* Keyword.Declaration */\n  .kn { color: #6730c5 } /* Keyword.Namespace */\n  .kp { color: #6730c5 } /* Keyword.Pseudo */\n  .kr { color: #6730c5 } /* Keyword.Reserved */\n  .kt { color: #7f4707 } /* Keyword.Type */\n  .ld { color: #7f4707 } /* Literal.Date */\n  .m { color: #7f4707 } /* Literal.Number */\n  .s { color: #00622f } /* Literal.String */\n  .na { color: #912583 } /* Name.Attribute */\n  .nb { color: #7f4707 } /* Name.Builtin */\n  .nc { color: #005b82 } /* Name.Class */\n  .no { color: #005b82 } /* Name.Constant */\n  .nd { color: #7f4707 } /* Name.Decorator */\n  .ni { color: #00622f } /* Name.Entity */\n  .ne { color: #6730c5 } /* Name.Exception */\n  .nf { color: #005b82 } /* Name.Function */\n  .nl { color: #7f4707 } /* Name.Label */\n  .nn { color: #080808 } /* Name.Namespace */\n  .nx { color: #080808 } /* Name.Other */\n  .py { color: #005b82 } /* Name.Property */\n  .nt { color: #005b82 } /* Name.Tag */\n  .nv { color: #a12236 } /* Name.Variable */\n  .ow { color: #6730c5 } /* Operator.Word */\n  .pm { color: #080808 } /* Punctuation.Marker */\n  .w { color: #080808 } /* Text.Whitespace */\n  .mb { color: #7f4707 } /* Literal.Number.Bin */\n  .mf { color: #7f4707 } /* Literal.Number.Float */\n  .mh { color: #7f4707 } /* Literal.Number.Hex */\n  .mi { color: #7f4707 } /* Literal.Number.Integer */\n  .mo { color: #7f4707 } /* Literal.Number.Oct */\n  .sa { color: #00622f } /* Literal.String.Affix */\n  .sb { color: #00622f } /* Literal.String.Backtick */\n  .sc { color: #00622f } /* Literal.String.Char */\n  .dl { color: #00622f } /* Literal.String.Delimiter */\n  .sd { color: #00622f } /* Literal.String.Doc */\n  .s2 { color: #00622f } /* Literal.String.Double */\n  .se { color: #00622f } /* Literal.String.Escape */\n  .sh { color: #00622f } /* Literal.String.Heredoc */\n  .si { color: #00622f } /* Literal.String.Interpol */\n  .sx { color: #00622f } /* Literal.String.Other */\n  .sr { color: #a12236 } /* Literal.String.Regex */\n  .s1 { color: #00622f } /* Literal.String.Single */\n  .ss { color: #005b82 } /* Literal.String.Symbol */\n  .bp { color: #7f4707 } /* Name.Builtin.Pseudo */\n  .fm { color: #005b82 } /* Name.Function.Magic */\n  .vc { color: #a12236 } /* Name.Variable.Class */\n  .vg { color: #a12236 } /* Name.Variable.Global */\n  .vi { color: #a12236 } /* Name.Variable.Instance */\n  .vm { color: #7f4707 } /* Name.Variable.Magic */\n  .il { color: #7f4707 } /* Literal.Number.Integer.Long */\n}\n\n[data-canCopy=\"true\"] .highlight pre{\n  @include u-padding-right(15);\n}\n\n\ncode.language-plaintext.highlighter-rouge, code.inline-code {\n  background-color: color('base-lightest');\n   padding-top: .125rem;\n   padding-bottom: .125rem;\n   padding-right: .5rem;\n   padding-left: .5rem;\n   word-wrap: break-word;\n}\n\nbody {\n  overflow-wrap: break-word;\n}\n\n@include at-media-max(\"mobile-lg\") {\n  table {\n    width: 100%\n  }\n}\n\na {\n  text-underline-offset: 4px;\n}","@use \"sass:meta\";\n@use \"sass:list\";\n@use \"../general/focus-outline\" as *;\n@use \"../../functions\" as *;\n@use \"../../mixins/utilities\" as *;\n@use \"../../mixins/general/focus-outline\" as *;\n@use \"../../settings\" as *;\n\n/*\n----------------------------------------\ntypeset()\n----------------------------------------\nSets:\n- family\n- size\n- line-height\n----------------------------------------\n*/\n\n@mixin typeset(\n  $family: $theme-body-font-family,\n  $scale: $theme-body-font-size,\n  $line-height: $theme-body-line-height\n) {\n  @if meta.type-of($family) == \"list\" {\n    $list: $family;\n    $family: if(list.nth($list, 1), list.nth($list, 1), null);\n    $scale: if(list.nth($list, 2), list.nth($list, 2), null);\n    $line-height: if(list.nth($list, 3), list.nth($list, 3), null);\n  }\n  $family: if($family == null, $theme-body-font-family, $family);\n  $scale: if($scale == null, $theme-body-font-size, $scale);\n  $line-height: if($line-height == null, $theme-body-line-height, $line-height);\n  @include u-font($family, $scale);\n  @include u-line-height($family, $line-height);\n}\n\n@mixin typeset-heading-base {\n  @include u-margin-y(0);\n  clear: both;\n}\n\n@mixin typeset-heading {\n  @include typeset-heading-base;\n\n  * + & {\n    margin-top: $theme-heading-margin-top;\n  }\n\n  + * {\n    margin-top: $theme-paragraph-margin-top;\n  }\n}\n\n@mixin typeset-p-base {\n  line-height: line-height($theme-body-font-family, $theme-body-line-height);\n  max-width: measure($theme-text-measure);\n}\n\n// typeset element mixins\n@mixin typeset-p {\n  @include typeset-p-base;\n  @include u-margin-y(0);\n\n  * + & {\n    margin-top: $theme-paragraph-margin-top;\n  }\n\n  + * {\n    margin-top: $theme-paragraph-margin-top;\n  }\n}\n\n@mixin typeset-link {\n  color: color($theme-link-color);\n  text-decoration: underline;\n\n  &:visited {\n    color: color($theme-link-visited-color);\n  }\n\n  &:hover {\n    color: color($theme-link-hover-color);\n  }\n\n  &:active {\n    color: color($theme-link-active-color);\n  }\n\n  &:focus {\n    @include focus-outline;\n  }\n}\n","@use \"sass:list\";\n@use \"../../functions\" as *;\n\n// Adds margin either l/r(x) or t/b(y)\n\n@mixin margin-n($side, $value...) {\n  $value: unpack($value);\n  @if $side == all {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin: get-uswds-value(margin, $value...) #{$important};\n  } @else if $side == x {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin-left: get-uswds-value(\"margin-horizontal\", $value...) #{$important};\n    margin-right: get-uswds-value(\"margin-horizontal\", $value...) #{$important};\n  } @else if $side == y {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin-bottom: get-uswds-value(\"margin-vertical\", $value...) #{$important};\n    margin-top: get-uswds-value(\"margin-vertical\", $value...) #{$important};\n  } @else if $side == t {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin-top: get-uswds-value(\"margin-vertical\", $value...) #{$important};\n  } @else if $side == r {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin-right: get-uswds-value(\"margin-horizontal\", $value...) #{$important};\n  } @else if $side == b {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin-bottom: get-uswds-value(\"margin-vertical\", $value...) #{$important};\n  } @else if $side == l {\n    $important: null;\n    @if has-important($value) {\n      $value: remove($value, \"!important\");\n      @if list.length($value) == 1 {\n        $value: de-list($value);\n      }\n      $important: \" !important\";\n    }\n    margin-left: get-uswds-value(\"margin-horizontal\", $value...) #{$important};\n  }\n}\n\n@mixin u-margin($value...) {\n  @include margin-n(all, $value...);\n}\n\n@mixin u-margin-x($value...) {\n  @include margin-n(x, $value...);\n}\n\n@mixin u-margin-y($value...) {\n  @include margin-n(y, $value...);\n}\n\n@mixin u-margin-top($value...) {\n  @include margin-n(t, $value...);\n}\n\n@mixin u-margin-right($value...) {\n  @include margin-n(r, $value...);\n}\n\n@mixin u-margin-bottom($value...) {\n  @include margin-n(b, $value...);\n}\n\n@mixin u-margin-left($value...) {\n  @include margin-n(l, $value...);\n}\n","/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nTYPOGRAPHY SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS typography tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens/typesetting/overview/\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nRoot font size\n----------------------------------------\nSetting $theme-respect-user-font-size to\ntrue sets the root font size to 100% and\nuses ems for media queries\n----------------------------------------\n$theme-root-font-size only applies when\n$theme-respect-user-font-size is set to\nfalse.\n\nThis will set the root font size\nas a specific px value and use px values\nfor media queries.\n\nAccepts true or false\n----------------------------------------\n*/\n\n$theme-respect-user-font-size: true !default;\n\n// $theme-root-font-size only applies when\n// $theme-respect-user-font-size is set to\n// false.\n\n// This will set the root font size\n// as a specific px value and use px values\n// for media queries.\n\n// Accepts values in px\n\n$theme-root-font-size: 10px !default;\n\n/*\n----------------------------------------\nGlobal styles\n----------------------------------------\nAdds basic styling for the following\nunclassed elements:\n\n- paragraph: paragraph text\n- link: links\n- content: paragraph text, links,\n  headings, lists, and tables\n----------------------------------------\n*/\n\n$theme-global-paragraph-styles: false !default;\n$theme-global-link-styles: false !default;\n$theme-global-content-styles: false !default;\n\n/*\n----------------------------------------\nBrowser compatibility mode\n----------------------------------------\nWhen true, outputs woff and ttf font \nformats in addition to woff2\n----------------------------------------\n*/\n\n$theme-font-browser-compatibility: false !default;\n\n/*\n----------------------------------------\nFont path\n----------------------------------------\nRelative font file path\n----------------------------------------\n*/\n\n$theme-font-path: \"../fonts\" !default;\n\n/*\n----------------------------------------\nCustom typeface tokens\n----------------------------------------\nAdd a new custom typeface token if\nyour project uses a typeface not already\ndefined by USWDS.\n----------------------------------------\nUSWDS defines the following tokens\nby default:\n----------------------------------------\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\n----------------------------------------\nAdd as many new tokens as you have\ncustom typefaces. Reference your new\ntoken(s) in the type-based font settings\nusing the quoted name of the token.\n\nFor example:\n\n$theme-font-type-cond: 'example-font-token';\n\ndisplay-name:\nThe display name of your font\n\ncap-height:\nThe height of a 500px `N` in Sketch\n----------------------------------------\nYou should change `example-[style]-token`\nnames to something more descriptive.\n----------------------------------------\n*/\n\n$theme-typeface-tokens: (\n  example-serif-token: (\n    display-name: \"Example Serif Display Name\",\n    cap-height: 364px,\n  ),\n  example-sans-token: (\n    display-name: \"Example Sans Display Name\",\n    cap-height: 364px,\n  ),\n) !default;\n\n/*\n----------------------------------------\nType-based font settings\n----------------------------------------\nSet the type-based tokens for your\nproject from the following tokens,\nor from any new font tokens you added in\n$theme-typeface-tokens.\n----------------------------------------\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\n----------------------------------------\n*/\n\n// condensed\n$theme-font-type-cond: false !default;\n\n// icon\n$theme-font-type-icon: false !default;\n\n// language-specific\n$theme-font-type-lang: false !default;\n\n// monospace\n$theme-font-type-mono: \"roboto-mono\" !default;\n\n// sans-serif\n$theme-font-type-sans: \"source-sans-pro\" !default;\n\n// serif\n$theme-font-type-serif: \"merriweather\" !default;\n\n/*\n----------------------------------------\nCustom font stacks\n----------------------------------------\nAdd custom font stacks to any of the\ntype-based fonts. Any USWDS typeface\ntoken already has a default stack.\n\nCustom stacks don't need to include the\nfont's display name. It will\nautomatically appear at the start of\nthe stack.\n----------------------------------------\nExample:\n$theme-font-type-sans: 'source-sans-pro';\n$theme-font-sans-custom-stack: \"Helvetica Neue\", Helvetica, Arial, sans;\n\nOutput:\nfont-family: \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans;\n----------------------------------------\n*/\n\n$theme-font-cond-custom-stack: false !default;\n$theme-font-icon-custom-stack: false !default;\n$theme-font-lang-custom-stack: false !default;\n$theme-font-mono-custom-stack: false !default;\n$theme-font-sans-custom-stack: false !default;\n$theme-font-serif-custom-stack: false !default;\n\n/*\n----------------------------------------\nAdd any custom font source files\n----------------------------------------\nIf you want USWDS to generate additional\n@font-face declarations, add your font\ndata below, following the example that\nfollows.\n----------------------------------------\nUSWDS automatically generates @font-face\ndeclarations for the following\n\n'merriweather'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n\nThese typefaces not require custom\nsource files.\n----------------------------------------\nEXAMPLE\n\n- dir:\n  Directory relative to $theme-font-path\n- This directory should include fonts saved as\n  .woff2\n  ExampleSerif-Normal.woff2\n\n$theme-font-serif-custom-src: (\n  dir: 'custom/example-serif',\n  roman: (\n    100: false,\n    200: false,\n    300: 'ExampleSerif-Light',\n    400: 'ExampleSerif-Normal',\n    500: false,\n    600: false,\n    700: 'ExampleSerif-Bold',\n    800: false,\n    900: false,\n  ),\n  italic: (\n    100: false,\n    200: false,\n    300: 'ExampleSerif-LightItalic',\n    400: 'ExampleSerif-Italic',\n    500: false,\n    600: false,\n    700: 'ExampleSerif-BoldItalic',\n    800: false,\n    900: false,\n  ),\n);\n----------------------------------------\n*/\n\n$theme-font-cond-custom-src: false !default;\n$theme-font-icon-custom-src: false !default;\n$theme-font-lang-custom-src: false !default;\n$theme-font-mono-custom-src: false !default;\n$theme-font-sans-custom-src: false !default;\n$theme-font-serif-custom-src: false !default;\n\n/*\n----------------------------------------\nRole-based font settings\n----------------------------------------\nSet the role-based tokens for your\nproject from the following font-type\ntokens.\n----------------------------------------\n'cond'\n'icon'\n'lang'\n'mono'\n'sans'\n'serif'\n----------------------------------------\n*/\n\n$theme-font-role-ui: \"sans\" !default;\n$theme-font-role-heading: \"serif\" !default;\n$theme-font-role-body: \"sans\" !default;\n$theme-font-role-code: \"mono\" !default;\n$theme-font-role-alt: \"serif\" !default;\n\n/*\n----------------------------------------\nType scale\n----------------------------------------\nDefine your project's type scale using\nvalues from the USWDS system type scale\n\n1-20\n----------------------------------------\n*/\n\n$theme-type-scale-3xs: 2 !default;\n$theme-type-scale-2xs: 3 !default;\n$theme-type-scale-xs: 4 !default;\n$theme-type-scale-sm: 5 !default;\n$theme-type-scale-md: 6 !default;\n$theme-type-scale-lg: 9 !default;\n$theme-type-scale-xl: 12 !default;\n$theme-type-scale-2xl: 14 !default;\n$theme-type-scale-3xl: 15 !default;\n\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nAssign weights 100-900\nOr use `false` for unneeded weights.\n----------------------------------------\n*/\n\n$theme-font-weight-thin: false !default;\n$theme-font-weight-light: 300 !default;\n$theme-font-weight-normal: 400 !default;\n$theme-font-weight-medium: false !default;\n$theme-font-weight-semibold: false !default;\n$theme-font-weight-bold: 700 !default;\n$theme-font-weight-heavy: false !default;\n\n// If USWDS is generating your @font-face rules,\n// should we generate all available weights\n// regardless of the assignments above?\n\n$theme-generate-all-weights: false !default;\n\n/*\n----------------------------------------\nGeneral typography settings\n----------------------------------------\nType scale tokens\n----------------------------------------\nmicro:      10px\n1:          12px\n2:          13px\n3:          14px\n4:          15px\n5:          16px\n6:          17px\n7:          18px\n8:          20px\n9:          22px\n10:         24px\n11:         28px\n12:         32px\n13:         36px\n14:         40px\n15:         48px\n16:         56px\n17:         64px\n18:         80px\n19:         120px\n20:         140px\n----------------------------------------\nLine height tokens\n----------------------------------------\n1:    1\n2:    1.15\n3:    1.35\n4:    1.5\n5:    1.62\n6:    1.75\n----------------------------------------\nFont role tokens\n----------------------------------------\n'ui'\n'heading'\n'body'\n'code'\n'alt'\n----------------------------------------\nMeasure (max-width) tokens\n----------------------------------------\n1:       44ex\n2:       60ex\n3:       64ex\n4:       68ex\n5:       74ex\n6:       88ex\nnone:    none\n----------------------------------------\n*/\n\n// Body settings are the equivalent of setting the <body> element\n$theme-body-font-family: \"body\" !default;\n$theme-body-font-size: \"sm\" !default;\n$theme-body-line-height: 5 !default;\n\n// If true, explicitly style the <body> element with the base styles\n$theme-style-body-element: false !default;\n\n// Headings\n$theme-h1-font-size: \"2xl\" !default;\n$theme-h2-font-size: \"xl\" !default;\n$theme-h3-font-size: \"lg\" !default;\n$theme-h4-font-size: \"sm\" !default;\n$theme-h5-font-size: \"xs\" !default;\n$theme-h6-font-size: \"3xs\" !default;\n$theme-heading-line-height: 2 !default;\n$theme-small-font-size: \"2xs\" !default;\n$theme-display-font-size: \"3xl\" !default;\n\n// Text and prose\n$theme-text-measure-narrow: 1 !default;\n$theme-text-measure: 4 !default;\n$theme-text-measure-wide: 6 !default;\n$theme-prose-font-family: \"body\" !default;\n\n// Lead text\n$theme-lead-font-family: \"heading\" !default;\n$theme-lead-font-size: \"lg\" !default;\n$theme-lead-line-height: 6 !default;\n$theme-lead-measure: 6 !default;\n\n// Margin\n$theme-heading-margin-top: 1.5em !default;\n$theme-paragraph-margin-top: 1em !default;\n","@use \"../../functions\" as *;\n\n/*\n----------------------------------------\nfamily()\n----------------------------------------\nGet a font-family stack\n----------------------------------------\n*/\n\n@mixin u-font-family($family) {\n  font-family: ff($family);\n}\n\n/*\n----------------------------------------\nsize()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n\n@mixin u-font-size($family, $scale) {\n  font-size: font-size($family, $scale);\n}\n\n/*\n----------------------------------------\nfont()\n----------------------------------------\nGet a font-family stack\nAND\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n\n@mixin u-font($family, $scale) {\n  font-family: ff($family);\n  font-size: font-size($family, $scale);\n}\n","@use \"sass:list\";\n@use \"../../functions\" as *;\n\n// Outputs line-height\n\n@mixin u-line-height($value...) {\n  $value: unpack($value);\n  $important: null;\n  @if has-important($value) {\n    $value: remove($value, \"!important\");\n    @if list.length($value) == 1 {\n      $value: de-list($value);\n    }\n    $important: \" !important\";\n  }\n  $family: list.nth($value, 1);\n  $scale: list.nth($value, 2);\n  line-height: lh($family, $scale) #{$important};\n}\n","@use \"../../settings\" as *;\n@use \"../../functions\" as *;\n@use \"../../mixins/utilities\" as *;\n@use \"./typeset\" as *;\n\n@mixin display {\n  @include typeset(\n    \"heading\",\n    $theme-display-font-size,\n    $theme-heading-line-height\n  );\n\n  font-weight: fw(\"bold\");\n}\n\n@mixin h1 {\n  @include typeset(\"heading\", $theme-h1-font-size, $theme-heading-line-height);\n  font-weight: fw(\"bold\");\n}\n\n@mixin h2 {\n  @include typeset(\"heading\", $theme-h2-font-size, $theme-heading-line-height);\n  font-weight: fw(\"bold\");\n}\n\n@mixin h3 {\n  @include typeset(\"heading\", $theme-h3-font-size, $theme-heading-line-height);\n  font-weight: fw(\"bold\");\n}\n\n@mixin h4 {\n  @include typeset(\"heading\", $theme-h4-font-size, $theme-heading-line-height);\n  font-weight: fw(\"bold\");\n}\n@mixin h5 {\n  @include typeset(\"heading\", $theme-h5-font-size, $theme-heading-line-height);\n  font-weight: fw(\"bold\");\n}\n\n@mixin h6 {\n  @include typeset(\"body\", $theme-h6-font-size, $theme-heading-line-height);\n  font-weight: fw(\"normal\");\n  letter-spacing: ls(\"ls-1\");\n  text-transform: uppercase;\n}\n\n@mixin typeset-display {\n  @include typeset-heading;\n  @include display;\n}\n\n@mixin typeset-h1 {\n  @include typeset-heading;\n  @include h1;\n}\n\n@mixin typeset-h2 {\n  @include typeset-heading;\n  @include h2;\n}\n\n@mixin typeset-h3 {\n  @include typeset-heading;\n  @include h3;\n}\n\n@mixin typeset-h4 {\n  @include typeset-heading;\n  @include h4;\n}\n\n@mixin typeset-h5 {\n  @include typeset-heading;\n  @include h5;\n}\n\n@mixin typeset-h6 {\n  @include typeset-heading;\n  @include h6;\n}\n","@use \"../../functions\" as *;\n@use \"../../settings\" as *;\n\n// Focus state mixin\n@mixin focus-outline(\n  $width: $theme-focus-width,\n  $style: $theme-focus-style,\n  $color: $theme-focus-color,\n  $offset: $theme-focus-offset\n) {\n  $width: if($width == null, $theme-focus-width, $width);\n  $style: if($style == null, $theme-focus-style, $style);\n  $color: if($color == null, $theme-focus-color, $color);\n  $offset: if($offset == null, $theme-focus-offset, $offset);\n  outline: units($width) $style color($color);\n  outline-offset: units($offset);\n}\n","@use \"../../functions\" as *;\n@use \"../../mixins/utilities\" as *;\n@use \"../../settings\" as *;\n\n@mixin usa-list {\n  @include u-margin-y(1em);\n  line-height: line-height($theme-body-font-family, $theme-body-line-height);\n  padding-left: 3ch;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  ul,\n  ol {\n    margin-top: 0.25em;\n  }\n}\n\n@mixin usa-list-item {\n  margin-bottom: 0.25em;\n  max-width: measure($theme-text-measure);\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n@mixin usa-list-styles {\n  ul,\n  ol {\n    @include usa-list;\n\n    li {\n      @include usa-list-item;\n    }\n  }\n}\n","@use \"sass:map\";\n@use \"../../functions\" as *;\n@use \"../../properties\" as *;\n@use \"../../settings\" as *;\n\n// Mobile-first media query helper\n\n$our-breakpoints: map-deep-get($system-properties, breakpoints, standard);\n$custom-breakpoints: map-deep-get($system-properties, breakpoints, extended);\n\n@mixin at-media($bp) {\n  $quoted-bp: smart-quote($bp);\n  @if $quoted-bp == \"none\" {\n    @content;\n  } @else if map.has-key($our-breakpoints, $quoted-bp) {\n    @if $theme-respect-user-font-size {\n      $bp: rem-to-user-em(map.get($our-breakpoints, $quoted-bp));\n    } @else {\n      $bp: rem-to-px(map.get($our-breakpoints, $quoted-bp));\n    }\n    @media all and (min-width: #{$bp}) {\n      @content;\n    }\n  } @else if map.has-key($custom-breakpoints, $quoted-bp) {\n    @if unit(map.get($custom-breakpoints, $quoted-bp)) == \"px\" {\n      @if $theme-respect-user-font-size {\n        $bp: px-to-user-em(map.get($custom-breakpoints, $quoted-bp));\n      } @else {\n        $bp: map.get($custom-breakpoints, $quoted-bp);\n      }\n      @media all and (min-width: #{$bp}) {\n        @content;\n      }\n    } @else {\n      @warn 'Custom breakpoint `#{$quoted-bp}` was defined with the unit #{unit(map.get($custom-breakpoints, $quoted-bp))} and can not be generated. Values for `$theme-utility-breakpoints-custom` must be set with `px` units.';\n    }\n  } @else {\n    @warn '`#{$bp}` is not a valid USWDS project breakpoint. Valid values: #{map.keys($our-breakpoints)}';\n  }\n}\n\n// Max-width media query\n@mixin at-media-max($bp) {\n  $quoted-bp: smart-quote($bp);\n  @if map-has-key($our-breakpoints, $quoted-bp) {\n    @if $theme-respect-user-font-size {\n      $bp: rem-to-user-em(map.get($our-breakpoints, $quoted-bp)) - 0.01em;\n    } @else {\n      $bp: rem-to-px(map.get($our-breakpoints, $quoted-bp)) - 1px;\n    }\n    @media all and (max-width: #{$bp}) {\n      @content;\n    }\n  } @else if map.has-key($custom-breakpoints, $quoted-bp) {\n    @if unit(map.get($custom-breakpoints, $quoted-bp)) == \"px\" {\n      @if $theme-respect-user-font-size {\n        $bp: px-to-user-em(map.get($custom-breakpoints, $quoted-bp)) - 0.01em;\n      } @else {\n        $bp: map.get($custom-breakpoints, $quoted-bp) - 1px;\n      }\n      @media all and (max-width: #{$bp}) {\n        @content;\n      }\n    } @else {\n      @warn 'Custom breakpoint `#{$quoted-bp}` has the unit #{unit(map.get($custom-breakpoints, $quoted-bp))} and can not be generated. Custom breakpoints must be set in px.';\n    }\n  } @else {\n    @warn '`#{$bp}` is not a valid USWDS project breakpoint. Valid values: #{map-keys($our-breakpoints)}';\n  }\n}\n","@use \"sass:list\";\n@use \"../../functions\" as *;\n\n// Adds padding either l/r(x) or t/b(y)\n\n@mixin padding-n($side, $value...) {\n  $value: unpack($value);\n  $important: null;\n  @if has-important($value) {\n    $value: remove($value, \"!important\");\n    @if list.length($value) == 1 {\n      $value: de-list($value);\n    }\n    $important: \" !important\";\n  }\n  @if $side == all {\n    padding: get-uswds-value(\"padding\", $value...) #{$important};\n  } @else if $side == x {\n    padding-left: get-uswds-value(\"padding\", $value...) #{$important};\n    padding-right: get-uswds-value(\"padding\", $value...) #{$important};\n  } @else if $side == y {\n    padding-bottom: get-uswds-value(\"padding\", $value...) #{$important};\n    padding-top: get-uswds-value(\"padding\", $value...) #{$important};\n  } @else {\n    padding-#{$side}: get-uswds-value(\"padding\", $value...) #{$important};\n  }\n}\n\n@mixin u-padding($value...) {\n  @include padding-n(all, $value...);\n}\n\n@mixin u-padding-x($value...) {\n  @include padding-n(x, $value...);\n}\n\n@mixin u-padding-y($value...) {\n  @include padding-n(y, $value...);\n}\n\n@mixin u-padding-top($value...) {\n  @include padding-n(top, $value...);\n}\n\n@mixin u-padding-right($value...) {\n  @include padding-n(right, $value...);\n}\n\n@mixin u-padding-bottom($value...) {\n  @include padding-n(bottom, $value...);\n}\n\n@mixin u-padding-left($value...) {\n  @include padding-n(left, $value...);\n}\n"]}